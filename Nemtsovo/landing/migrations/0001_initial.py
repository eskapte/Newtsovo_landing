# Generated by Django 4.1.13 on 2024-04-16 20:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import image_cropping.fields
import landing.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('displayed_name', models.CharField(default='Доп. информация', help_text='Название, которое будет отображаться на сайте', max_length=100, verbose_name='Отображаемое название')),
                ('inner_name', models.CharField(default='Доп. информация', help_text='Это название уже для вашего удобства, оно отображается здесь, в админке', max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Дополнительная информация',
                'verbose_name_plural': 'Дополнительная информация',
            },
        ),
        migrations.CreateModel(
            name='BookingIdentifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Идентификатор бронируемого объекта',
                'verbose_name_plural': 'Индентификаторы бронируемых объектов',
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_message', models.CharField(editable=False, max_length=500, verbose_name='Сообщение об ошибке')),
                ('stack_trace', models.TextField(blank=True, editable=False, null=True, verbose_name='Трассировка')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('additional_info', models.TextField(blank=True, editable=False, null=True, verbose_name='Доп. информация')),
                ('is_solved', models.BooleanField(default=False, verbose_name='Решено')),
            ],
            options={
                'verbose_name': 'Ошибка',
                'verbose_name_plural': 'Ошибки',
                'ordering': ['is_solved', '-date'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('date', models.DateTimeField(verbose_name='Дата и время')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(verbose_name='Описание')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='OurPet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя питомаца')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name': 'Питомец',
                'verbose_name_plural': 'Питомцы',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OurProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('price', models.PositiveIntegerField(verbose_name='Стоимость')),
                ('count', models.PositiveIntegerField(default=1, verbose_name='Кол-во')),
                ('measure', models.CharField(choices=[('л', 'литр'), ('г', 'грамм'), ('кг', 'килограмм'), ('шт', 'штука')], default=('шт', 'штука'), max_length=4, verbose_name='Ед. измерения')),
                ('is_available', models.BooleanField(default=True, verbose_name='В наличии')),
            ],
            options={
                'verbose_name': 'Продукция',
                'verbose_name_plural': 'Продукция',
                'ordering': ['-is_available', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singular', models.CharField(max_length=6, verbose_name='Единственное число (1 час)')),
                ('plural', models.CharField(max_length=6, verbose_name='Множественное число (2 часа)')),
                ('plural_special', models.CharField(max_length=6, verbose_name='Множественное число дополнительное (30 часов)')),
            ],
            options={
                'verbose_name': 'Период/Кол-во',
                'verbose_name_plural': 'Периоды/Кол-во',
            },
        ),
        migrations.CreateModel(
            name='WellnessTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('start_price', models.PositiveIntegerField(help_text='Оставьте 0 если это бесплатно', verbose_name='Начальная цена')),
                ('duration', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Продолжительность')),
                ('description', models.TextField(max_length=400, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Порядок отображения')),
                ('booking_btn_text', models.CharField(choices=[('Забронировать', 'Забронировать'), ('Записаться', 'Записаться')], default='Забронировать', max_length=25, verbose_name='Текст кнопки в карточке')),
                ('additional_info', models.ForeignKey(blank=True, help_text='Добавляется в конец описания и открывается отдельном окном при нажатии', null=True, on_delete=django.db.models.deletion.SET_NULL, to='landing.additionalinfo', verbose_name='Доп. информация')),
                ('booking_identifier', models.ForeignKey(blank=True, help_text='Нужен для системы бронирования. Если пустой, то забронировать данный эл-т будет нельзя', null=True, on_delete=django.db.models.deletion.SET_NULL, to='landing.bookingidentifier', verbose_name='Идентификатор бронируемого объекта')),
                ('period', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='landing.period', verbose_name='Период/Кол-во')),
            ],
            options={
                'verbose_name': 'Оздоровительная процедура',
                'verbose_name_plural': 'Оздоровительные процедуры',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('start_price', models.PositiveIntegerField(help_text='Поставьте 0 если это бесплатно', verbose_name='Начальная цена')),
                ('duration', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Продолжительность')),
                ('description', models.TextField(max_length=400, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Порядок отображения')),
                ('booking_btn_text', models.CharField(choices=[('Забронировать', 'Забронировать'), ('Записаться', 'Записаться')], default='Забронировать', max_length=25, verbose_name='Текст кнопки в карточке')),
                ('additional_info', models.ForeignKey(blank=True, help_text='Добавляется в конец описания и открывается отдельном окном при нажатии', null=True, on_delete=django.db.models.deletion.SET_NULL, to='landing.additionalinfo', verbose_name='Доп. информация')),
                ('booking_identifier', models.ForeignKey(blank=True, help_text='Нужен для системы бронирования. Если пустой, то забронировать данный эл-т будет нельзя', null=True, on_delete=django.db.models.deletion.SET_NULL, to='landing.bookingidentifier', verbose_name='Идентификатор бронируемого объекта')),
                ('period', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='landing.period', verbose_name='Период/Кол-во')),
            ],
            options={
                'verbose_name': 'Домик',
                'verbose_name_plural': 'Домики',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(editable=False, max_length=100, verbose_name='ФИО')),
                ('phone_number', models.CharField(editable=False, max_length=20, verbose_name='Номер телефона')),
                ('adults_count', models.PositiveIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Кол-во взрослых')),
                ('childs_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Кол-во детей')),
                ('desired_dates', models.CharField(editable=False, max_length=400, verbose_name='Желаемые даты')),
                ('is_has_whatsapp', models.BooleanField(editable=False, verbose_name='Имеется Whatsapp')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_dayly', models.BooleanField(default=False, verbose_name='Суточное бронирование')),
                ('is_late_checkout', models.BooleanField(blank=True, default=False, verbose_name='Поздний выезд')),
                ('is_early_checkin', models.BooleanField(blank=True, default=False, verbose_name='Ранний заезд')),
                ('status', models.CharField(choices=[('a', 'Активно 🟢'), ('b', 'Бронь ✔️'), ('c', 'Отменено ❌')], default='a', max_length=20, verbose_name='Статус')),
                ('manager_comment', models.TextField(blank=True, help_text='Если надо что-то пометить для себя', null=True, verbose_name='Комментарий')),
                ('user_comment', models.TextField(blank=True, editable=False, help_text='Из заявки на бронирование', null=True, verbose_name='Комментарий клиента')),
                ('date_start_fact', models.DateTimeField(blank=True, null=True, verbose_name='Факт. начало')),
                ('date_end_fact', models.DateTimeField(blank=True, null=True, verbose_name='Факт. конец')),
                ('booking_identifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='landing.bookingidentifier', verbose_name='Что забронировано')),
            ],
            options={
                'verbose_name': 'Заявка на бронирование',
                'verbose_name_plural': 'Заявки на бронирование',
                'ordering': ['status', '-date_create'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('file', models.FileField(upload_to=landing.models.Attachment.get_upload_path, verbose_name='Фото/Видео')),
                ('miniature', image_cropping.fields.ImageRatioField('file', '420x300', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=True, verbose_name='Миниатюра')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Порядок отображения')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Фото/Видео',
                'verbose_name_plural': 'Фото/Видео',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='AdditionalInfoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Текст')),
                ('additional_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='landing.additionalinfo')),
            ],
            options={
                'verbose_name': 'Пункт',
                'verbose_name_plural': 'Пункты',
            },
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('start_price', models.PositiveIntegerField(help_text='Оставьте 0 если это бесплатно', verbose_name='Начальная цена')),
                ('duration', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Продолжительность / кол-во')),
                ('description', models.TextField(max_length=400, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, verbose_name='Порядок отображения')),
                ('booking_btn_text', models.CharField(choices=[('Забронировать', 'Забронировать'), ('Записаться', 'Записаться')], default='Забронировать', max_length=25, verbose_name='Текст кнопки в карточке')),
                ('additional_info', models.ForeignKey(blank=True, help_text='Добавляется в конец описания и открывается отдельном окном при нажатии', null=True, on_delete=django.db.models.deletion.SET_NULL, to='landing.additionalinfo', verbose_name='Доп. информация')),
                ('booking_identifier', models.ForeignKey(blank=True, help_text='Нужен для системы бронирования. Если пустой, то забронировать данный эл-т будет нельзя', null=True, on_delete=django.db.models.deletion.SET_NULL, to='landing.bookingidentifier', verbose_name='Идентификатор бронируемого объекта')),
                ('period', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='landing.period', verbose_name='Период/Кол-во')),
            ],
            options={
                'verbose_name': 'Досуг',
                'verbose_name_plural': 'Досуг',
                'ordering': ['order'],
            },
        ),
        migrations.AddIndex(
            model_name='attachment',
            index=models.Index(fields=['content_type', 'object_id'], name='landing_att_content_59ff28_idx'),
        ),
    ]